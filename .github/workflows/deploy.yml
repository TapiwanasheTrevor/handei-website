name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, zip
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Copy .env
      run: |
        cp .env.example .env
        sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/g' .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/g' .env
        sed -i 's/DB_PORT=3306/DB_PORT=3306/g' .env
        sed -i 's/DB_DATABASE=handei/DB_DATABASE=testing/g' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=root/g' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=password/g' .env

    - name: Install Composer Dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Install NPM Dependencies
      run: npm ci

    - name: Build Frontend Assets
      run: npm run build

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Run Database Migrations
      run: php artisan migrate --force

    - name: Run Laravel Tests
      run: php artisan test

    - name: Install Next.js Dependencies
      working-directory: ./resources/js/landing
      run: npm ci

    - name: Build Next.js
      working-directory: ./resources/js/landing
      run: npm run build

    - name: Test Next.js Build
      working-directory: ./resources/js/landing
      run: npm run lint || true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST \
          "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
          -H "Authorization: Bearer ${RENDER_API_KEY}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": true}'